var searchIndex = new Map(JSON.parse('[["crossplatform_path",{"t":"FGPPNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNN","n":["CrossPathBuf","LibraryError","Unknown","Uppercase","as_str","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","cross_path","default","exists","fmt","","","","from","","into","","new","to_current_os_path_buf","to_nix_path_buf","to_owned","to_string","","to_win_path_buf","try_from","","try_into","","type_id",""],"q":[[0,"crossplatform_path"],[36,"alloc::string"],[37,"core::fmt"],[38,"std::path"],[39,"core::result"],[40,"core::any"]],"i":"``Ab0b1010000000110010100000100101010","f":"````{{{d{b}}}{{d{f}}}}{d{{d{c}}}{}}0{{{d{h}}}{{d{hc}}}{}}0{{{d{b}}}b}{{d{d{hc}}}j{}}{{dl}j}{bn}{{}b}{{{d{b}}}A`}{{{d{Ab}}{d{hAd}}}Af}0{{{d{b}}{d{hAd}}}Af}0{cc{}}0{{}c{}}0{nb}{{{d{b}}}Ah}0{dc{}}{dn}02{c{{Aj{e}}}{}{}}0{{}{{Aj{c}}}{}}0{dAl}0","D":"Ah","p":[[5,"CrossPathBuf",0],[1,"reference",null,null,1],[1,"str"],[0,"mut"],[1,"unit"],[1,"u8"],[5,"String",36],[1,"bool"],[6,"LibraryError",0],[5,"Formatter",37],[8,"Result",37],[5,"PathBuf",38],[6,"Result",39,null,1],[5,"TypeId",40]],"r":[],"b":[[15,"impl-Debug-for-LibraryError"],[16,"impl-Display-for-LibraryError"],[17,"impl-Display-for-CrossPathBuf"],[18,"impl-Debug-for-CrossPathBuf"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABgABgABAAAAAwABAAYACAAQAAMAGwACAB8ABQA=","P":[[5,"T"],[9,""],[10,"T"],[11,""],[19,"T"],[21,"U"],[23,""],[26,"T"],[27,""],[30,"U,T"],[32,"U"],[34,""]]}],["crossplatform_path",{"t":"FPPGPPPNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["CrossPathBuf","ForbiddenAscii","InvalidCharacter","LibraryError","MustNotEndWith","ReservedWords","Unknown","as_ref","as_str","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","cross_path","eq","","exists","fmt","","","","from","","into","","is_dir","is_file","join_relative","new","to_current_os_path_buf","to_nix_path_buf","to_owned","to_string","","to_win_path_buf","try_from","","try_into","","type_id",""],"q":[[0,"crossplatform_path"],[44,"std::path"],[45,"alloc::string"],[46,"core::fmt"],[47,"core::result"],[48,"core::any"]],"i":"`Ab0`000b010100000100110010100000000100101010","f":"```````{{{d{b}}}{{d{f}}}}{{{d{b}}}{{d{h}}}}{d{{d{c}}}{}}0{{{d{j}}}{{d{jc}}}{}}0{{{d{b}}}b}{{d{d{jc}}}l{}}{{dn}l}{bA`}{{{d{Ab}}{d{Ab}}}Ad}{{{d{b}}{d{b}}}Ad}{{{d{b}}}Ad}{{{d{Ab}}{d{jAf}}}Ah}0{{{d{b}}{d{jAf}}}Ah}0{cc{}}0{{}c{}}044{{{d{b}}{d{h}}}{{Aj{bAb}}}}{{{d{h}}}{{Aj{bAb}}}}{{{d{b}}}Al}0{dc{}}{dA`}02{c{{Aj{e}}}{}{}}0{{}{{Aj{c}}}{}}0{dAn}0","D":"Bd","p":[[5,"CrossPathBuf",0],[1,"reference",null,null,1],[5,"Path",44],[1,"str"],[0,"mut"],[1,"unit"],[1,"u8"],[5,"String",45],[6,"LibraryError",0],[1,"bool"],[5,"Formatter",46],[8,"Result",46],[6,"Result",47,null,1],[5,"PathBuf",44],[5,"TypeId",48]],"r":[],"b":[[20,"impl-Debug-for-LibraryError"],[21,"impl-Display-for-LibraryError"],[22,"impl-Debug-for-CrossPathBuf"],[23,"impl-Display-for-CrossPathBuf"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABoABwACAAEABQADAAoABgASAAEAFQACACMAAgAnAAUA","P":[[9,"T"],[13,""],[14,"T"],[15,""],[24,"T"],[26,"U"],[28,""],[34,"T"],[35,""],[38,"U,T"],[40,"U"],[42,""]]}],["crossplatform_path",{"t":"FPPGPPPNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["CrossPathBuf","ForbiddenAscii","InvalidCharacter","LibraryError","MustNotEndWith","ReservedWords","Unknown","as_str","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","cross_path","eq","","exists","fmt","","","","from","","into","","is_dir","is_file","join_relative","new","to_current_os_path_buf","to_nix_path_buf","to_owned","to_string","","to_win_path_buf","try_from","","try_into","","type_id",""],"q":[[0,"crossplatform_path"],[43,"alloc::string"],[44,"core::fmt"],[45,"core::result"],[46,"std::path"],[47,"core::any"]],"i":"`A`0`000b10100000100110010100000000100101010","f":"```````{{{d{b}}}{{d{f}}}}{d{{d{c}}}{}}0{{{d{h}}}{{d{hc}}}{}}0{{{d{b}}}b}{{d{d{hc}}}j{}}{{dl}j}{bn}{{{d{A`}}{d{A`}}}Ab}{{{d{b}}{d{b}}}Ab}{{{d{b}}}Ab}{{{d{A`}}{d{hAd}}}Af}0{{{d{b}}{d{hAd}}}Af}0{cc{}}0{{}c{}}044{{{d{b}}{d{f}}}{{Ah{bA`}}}}{{{d{f}}}{{Ah{bA`}}}}{{{d{b}}}Aj}0{dc{}}{dn}02{c{{Ah{e}}}{}{}}0{{}{{Ah{c}}}{}}0{dAl}0","D":"Bb","p":[[5,"CrossPathBuf",0],[1,"reference",null,null,1],[1,"str"],[0,"mut"],[1,"unit"],[1,"u8"],[5,"String",43],[6,"LibraryError",0],[1,"bool"],[5,"Formatter",44],[8,"Result",44],[6,"Result",45,null,1],[5,"PathBuf",46],[5,"TypeId",47]],"r":[],"b":[[19,"impl-Display-for-LibraryError"],[20,"impl-Debug-for-LibraryError"],[21,"impl-Display-for-CrossPathBuf"],[22,"impl-Debug-for-CrossPathBuf"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABoABwACAAEABQACAAkACQAUAAEAFwAAACIAAgAmAAUA","P":[[8,"T"],[12,""],[13,"T"],[14,""],[23,"T"],[25,"U"],[27,""],[33,"T"],[34,""],[37,"U,T"],[39,"U"],[41,""]]}],["crossplatform_path",{"t":"FPPGPPPNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["CrossPathBuf","ForbiddenAscii","InvalidCharacter","LibraryError","MustNotEndWith","ReservedWords","Unknown","as_str","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","cross_path","eq","","exists","fmt","","","","from","","into","","is_dir","is_file","join_relative","new","to_current_os_path_buf","to_nix_path_buf","to_owned","to_string","","to_win_path_buf","try_from","","try_into","","type_id",""],"q":[[0,"crossplatform_path"],[43,"alloc::string"],[44,"core::fmt"],[45,"core::result"],[46,"std::path"],[47,"core::any"]],"i":"`A`0`000b10100000100110010100000000100101010","f":"```````{{{d{b}}}{{d{f}}}}{d{{d{c}}}{}}0{{{d{h}}}{{d{hc}}}{}}0{{{d{b}}}b}{{d{d{hc}}}j{}}{{dl}j}{bn}{{{d{A`}}{d{A`}}}Ab}{{{d{b}}{d{b}}}Ab}{{{d{b}}}Ab}{{{d{A`}}{d{hAd}}}Af}0{{{d{b}}{d{hAd}}}Af}0{cc{}}0{{}c{}}044{{{d{b}}{d{f}}}{{Ah{bA`}}}}{{{d{f}}}{{Ah{bA`}}}}{{{d{b}}}Aj}0{dc{}}{dn}02{c{{Ah{e}}}{}{}}0{{}{{Ah{c}}}{}}0{dAl}0","D":"Bd","p":[[5,"CrossPathBuf",0],[1,"reference",null,null,1],[1,"str"],[0,"mut"],[1,"unit"],[1,"u8"],[5,"String",43],[6,"LibraryError",0],[1,"bool"],[5,"Formatter",44],[8,"Result",44],[6,"Result",45,null,1],[5,"PathBuf",46],[5,"TypeId",47]],"r":[],"b":[[19,"impl-Display-for-LibraryError"],[20,"impl-Debug-for-LibraryError"],[21,"impl-Display-for-CrossPathBuf"],[22,"impl-Debug-for-CrossPathBuf"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABkACAACAAEABQACAAkABgARAAEAFAABABcAAAAiAAIAJgAFAA==","P":[[8,"T"],[12,""],[13,"T"],[14,""],[23,"T"],[25,"U"],[27,""],[33,"T"],[34,""],[37,"U,T"],[39,"U"],[41,""]]}],["crossplatform_path",{"t":"FPPPGPPPNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNOO","n":["CrossPathBuf","ForbiddenAscii","InvalidCharacter","IoError","LibraryError","MustNotEndWith","ReservedWords","Unknown","as_str","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","cross_path","eq","exists","fmt","","","","from","","into","","is_dir","is_file","join_relative","new","read_to_string","source","to_owned","to_path_buf_current_os","to_path_buf_nix","to_path_buf_win","to_string","","try_from","","try_into","","type_id","","path","source"],"q":[[0,"crossplatform_path"],[45,"crossplatform_path::LibraryError"],[47,"alloc::string"],[48,"core::fmt"],[49,"core::result"],[50,"core::error"],[51,"core::option"],[52,"std::path"],[53,"core::any"],[54,"std::io::error"]],"i":"`Ab00`000b101000000011001010000001000010101010Bb0","f":"````````{{{d{b}}}{{d{f}}}}{d{{d{c}}}{}}0{{{d{h}}}{{d{hc}}}{}}0{{{d{b}}}b}{{d{d{hc}}}j{}}{{dl}j}{bn}{{{d{b}}{d{b}}}A`}{{{d{b}}}A`}{{{d{Ab}}{d{hAd}}}Af}0{{{d{b}}{d{hAd}}}Af}0{cc{}}0{{}c{}}044{{{d{b}}{d{f}}}{{Ah{bAb}}}}{{{d{f}}}{{Ah{bAb}}}}{{{d{b}}}{{Ah{nAb}}}}{{{d{Ab}}}{{Al{{d{Aj}}}}}}{dc{}}{{{d{b}}}An}00{dn}0{c{{Ah{e}}}{}{}}0{{}{{Ah{c}}}{}}0{dB`}0{Bbn}{BbBd}","D":"Bf","p":[[5,"CrossPathBuf",0],[1,"reference",null,null,1],[1,"str"],[0,"mut"],[1,"unit"],[1,"u8"],[5,"String",47],[1,"bool"],[6,"LibraryError",0],[5,"Formatter",48],[8,"Result",48],[6,"Result",49,null,1],[10,"Error",50],[6,"Option",51,null,1],[5,"PathBuf",52],[5,"TypeId",53],[15,"IoError",45],[5,"Error",54]],"r":[],"b":[[19,"impl-Debug-for-LibraryError"],[20,"impl-Display-for-LibraryError"],[21,"impl-Display-for-CrossPathBuf"],[22,"impl-Debug-for-CrossPathBuf"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABwACAACAAIABgACAAoABgASAAAAFAABABcAAAAhAAEAJgAJAA==","P":[[9,"T"],[13,""],[14,"T"],[15,""],[23,"T"],[25,"U"],[27,""],[33,"T"],[34,""],[39,"U,T"],[41,"U"],[43,""]]}],["crossplatform_path",{"t":"FPPPGPPPNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNOO","n":["CrossPathBuf","ForbiddenAscii","InvalidCharacter","IoError","LibraryError","MustNotEndWith","ReservedWords","Unknown","as_str","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","cross_path","eq","exists","fmt","","","","from","","into","","is_dir","is_file","join_relative","new","read_to_string","source","to_owned","to_path_buf_current_os","to_path_buf_nix","to_path_buf_win","to_string","","try_from","","try_into","","type_id","","path","source"],"q":[[0,"crossplatform_path"],[45,"crossplatform_path::LibraryError"],[47,"alloc::string"],[48,"core::fmt"],[49,"core::result"],[50,"std::io::error"],[51,"core::error"],[52,"core::option"],[53,"std::path"],[54,"core::any"]],"i":"`Ab00`000b101000000011001010000001000010101010Bd0","f":"````````{{{d{b}}}{{d{f}}}}{d{{d{c}}}{}}0{{{d{h}}}{{d{hc}}}{}}0{{{d{b}}}b}{{d{d{hc}}}j{}}{{dl}j}{bn}{{{d{b}}{d{b}}}A`}{{{d{b}}}A`}{{{d{Ab}}{d{hAd}}}Af}0{{{d{b}}{d{hAd}}}Af}0{cc{}}0{{}c{}}044{{{d{b}}{d{f}}}{{Ah{bAb}}}}{{{d{f}}}{{Ah{bAb}}}}{{{d{b}}}{{Ah{nAj}}}}{{{d{Ab}}}{{An{{d{Al}}}}}}{dc{}}{{{d{b}}}B`}00{dn}0{c{{Ah{e}}}{}{}}0{{}{{Ah{c}}}{}}0{dBb}0{Bdn}{BdAj}","D":"Bd","p":[[5,"CrossPathBuf",0],[1,"reference",null,null,1],[1,"str"],[0,"mut"],[1,"unit"],[1,"u8"],[5,"String",47],[1,"bool"],[6,"LibraryError",0],[5,"Formatter",48],[8,"Result",48],[6,"Result",49,null,1],[5,"Error",50],[10,"Error",51],[6,"Option",52,null,1],[5,"PathBuf",53],[5,"TypeId",54],[15,"IoError",45]],"r":[],"b":[[19,"impl-Debug-for-LibraryError"],[20,"impl-Display-for-LibraryError"],[21,"impl-Display-for-CrossPathBuf"],[22,"impl-Debug-for-CrossPathBuf"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAB0ACAACAAIABgACAAoABgASAAAAFAABABcAAAAgAAIAJgAJAA==","P":[[9,"T"],[13,""],[14,"T"],[15,""],[23,"T"],[25,"U"],[27,""],[33,"T"],[34,""],[39,"U,T"],[41,"U"],[43,""]]}],["crossplatform_path",{"t":"FPPPGPPPPNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNOO","n":["CrossPathBuf","ForbiddenAscii","InvalidCharacter","IoError","LibraryError","MustNotEndWith","NoParent","ReservedWords","Unknown","as_str","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","create_dir_all","create_dir_all_for_file","cross_path","eq","exists","fmt","","","","from","","into","","is_dir","is_file","join_relative","new","read_to_string","source","to_owned","to_path_buf_current_os","to_path_buf_nix","to_path_buf_win","to_string","","try_from","","try_into","","type_id","","write_str_to_file","path","source"],"q":[[0,"crossplatform_path"],[49,"crossplatform_path::LibraryError"],[51,"core::result"],[52,"alloc::string"],[53,"core::fmt"],[54,"core::error"],[55,"core::option"],[56,"std::path"],[57,"core::any"],[58,"std::io::error"]],"i":"`n00`0000b101000000000110010100000010000101010100Bb0","f":"`````````{{{d{b}}}{{d{f}}}}{d{{d{c}}}{}}0{{{d{h}}}{{d{hc}}}{}}0{{{d{b}}}b}{{d{d{hc}}}j{}}{{dl}j}{{{d{b}}}{{A`{jn}}}}0{bAb}{{{d{b}}{d{b}}}Ad}{{{d{b}}}Ad}{{{d{n}}{d{hAf}}}Ah}0{{{d{b}}{d{hAf}}}Ah}0{cc{}}0{{}c{}}044{{{d{b}}{d{f}}}{{A`{bn}}}}{{{d{f}}}{{A`{bn}}}}{{{d{b}}}{{A`{Abn}}}}{{{d{n}}}{{Al{{d{Aj}}}}}}{dc{}}{{{d{b}}}An}00{dAb}0{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{dB`}0{{{d{b}}{d{f}}}{{A`{jn}}}}{BbAb}{BbBd}","D":"Bl","p":[[5,"CrossPathBuf",0],[1,"reference",null,null,1],[1,"str"],[0,"mut"],[1,"unit"],[1,"u8"],[6,"LibraryError",0],[6,"Result",51,null,1],[5,"String",52],[1,"bool"],[5,"Formatter",53],[8,"Result",53],[10,"Error",54],[6,"Option",55,null,1],[5,"PathBuf",56],[5,"TypeId",57],[15,"IoError",49],[5,"Error",58]],"r":[],"b":[[22,"impl-Display-for-LibraryError"],[23,"impl-Debug-for-LibraryError"],[24,"impl-Display-for-CrossPathBuf"],[25,"impl-Debug-for-CrossPathBuf"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAB0ACQACAAIABgADAAsABgAVAAAAFwABABoAAAAkAAEAKQAHADIAAQA=","P":[[10,"T"],[14,""],[15,"T"],[16,""],[26,"T"],[28,"U"],[30,""],[36,"T"],[37,""],[42,"U,T"],[44,"U"],[46,""]]}],["crossplatform_path",{"t":"GPPNNNNNNNNNN","n":["LibraryError","Unknown","Uppercase","borrow","borrow_mut","fmt","","from","into","to_string","try_from","try_into","type_id"],"q":[[0,"crossplatform_path"],[13,"core::fmt"],[14,"alloc::string"],[15,"core::result"],[16,"core::any"]],"i":"`f00000000000","f":"```{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{f}}{b{dh}}}j}0{cc{}}{{}c{}}{bl}{c{{n{e}}}{}{}}{{}{{n{c}}}{}}{bA`}","D":"h","p":[[1,"reference",null,null,1],[0,"mut"],[6,"LibraryError",0],[5,"Formatter",13],[8,"Result",13],[5,"String",14],[6,"Result",15,null,1],[5,"TypeId",16]],"r":[],"b":[[5,"impl-Display-for-LibraryError"],[6,"impl-Debug-for-LibraryError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAkAAgACAAUACgADAA==","P":[[3,"T"],[5,""],[7,"T"],[8,"U"],[9,""],[10,"U,T"],[11,"U"],[12,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[1397,1634,1589,1597,1867,1867,2000,789]}